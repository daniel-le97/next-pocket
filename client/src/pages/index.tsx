/* eslint-disable @typescript-eslint/no-misused-promises */
/* eslint-disable @typescript-eslint/no-floating-promises */
/* eslint-disable @next/next/no-img-element */
import { observer } from "mobx-react";
import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState,useCallback } from "react";
import { AppState } from "../../AppState";
import { pb } from "../../utils/pocketBase";
import ServerCard from "../components/Explore/ServerCard";
import { serversService } from "../services/ServersService";
import React from "react";
import SearchBar from "@/components/Explore/SearchBar";
import { FaArrowCircleLeft, FaArrowCircleRight } from "react-icons/fa";
import { debounce } from "lodash";


const Explore: NextPage = () => {
  const router = useRouter();
  const servers = AppState.servers;
  const user = pb.authStore.model;
 const [currentPage, setCurrentPage] = useState(AppState.page);
 const [totalPages, setTotalPages] = useState(AppState.totalPages);
 
  useEffect(() => {
    const user = pb.authStore.model;
    if (!user) {
      router.push("/login");
    }
  }, [router]);

  useEffect(() => {
    const getServers = async () => {
      await serversService.getServersList(AppState.page);
    };
    getServers();

    // servers.sort((a,b) => a.members?.includes(user?.id))
  }, []);

 const handlePagination = useCallback(
   debounce((isIncrement) => {
     AppState.page = isIncrement ? AppState.page + 1 : AppState.page - 1;
     serversService.getServersList(AppState.page);
   }, 500),
   []
 );
  return (
    <>
      <Head>
        <title>next-pocket</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="  dark flex min-h-screen  w-full flex-col bg-gray-300  dark:bg-zinc-800 ">
        <div className="explore-banner ">
          <div className="relative ">
            <img
              src="https://img.freepik.com/free-vector/telescope-science-discovery-watching-stars-planets-outer-space_107791-4920.jpg?w=900&t=st=1677706310~exp=1677706910~hmac=1f7b435bec55558f1de8b5bc54632ee088625c1772d5eb3c102107da67f9327a"
              alt=""
              className="rounded-xl shadow-md shadow-zinc-900 "
            />
            <div className=" absolute top-24 left-80 text-2xl  font-bold text-white">
              Find your community
            </div>
          </div>
        </div>
        <SearchBar />
        <div className="  mt-10 mb-2  flex  flex-wrap    justify-center ">
          {servers && servers.map((s) => <ServerCard server={s} key={s.id} />)}
        </div>
        <div className="my-3 flex items-center justify-center">
          <button
            className="btn-primary disabled:cursor-not-allowed"
            disabled={AppState.page === 1}
            onClick={() => handlePagination(false)}
          >
            <FaArrowCircleLeft size={32} />
          </button>
          <div className="mx-3 flex gap-x-3">
            {Array.from(
              { length: AppState.totalPages },
              (_, index) => index + 1
            ).map((pageNum) => (
              <div
                className={`text-gray-300${
                  pageNum === AppState.page
                    ? " rounded-full bg-indigo-400 px-2  "
                    : ""
                }`}
                key={pageNum}
                onClick={() => {
                  AppState.page = pageNum;
                  serversService.getServersList(AppState.page);
                }}
              >
                {pageNum}
              </div>
            ))}
          </div>
          <button
            className="btn-primary disabled:cursor-not-allowed"
            disabled={AppState.page === AppState.totalPages}
            onClick={() => handlePagination(true)}
          >
            <FaArrowCircleRight size={32} />
          </button>
        </div>
      </main>
    </>
  );
};

export default observer(Explore);
