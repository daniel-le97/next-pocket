/* eslint-disable @typescript-eslint/no-floating-promises */
/* eslint-disable @typescript-eslint/no-non-null-assertion */

import { observer } from "mobx-react";
import { NextPage } from "next";
import type { Admin, Record } from "pocketbase";
import React, { useEffect, useState, Fragment } from "react";
import { useForm } from "react-hook-form";
import { useUser } from "../../../hooks/User";
import type { ServersResponse } from "../../../PocketBaseTypes/pocketbase-types";
import { Tab } from "@headlessui/react";
import ContentContainer from "../../components/Messages/MessageContainer";

import Head from "next/head";
import FriendsBar from "../../components/DirectMessages/FriendsBar";
import { userService } from "../../services/UserService";
import Pop from "../../../utils/Pop";
import { AppState } from "../../../AppState";
import AddFriend from "../../components/DirectMessages/AddFriend";
import FriendRequests from "../../components/DirectMessages/FriendRequests";
function classNames(...classes: any[]) {
  return classes.filter(Boolean).join(" ");
}
function DirectMessagesPage() {
  let [categories] = useState(["Requests", "AddFriend"]);
  const [activeCategory, setActiveCategory] = useState("Requests");

  const handleClick = (data: any) => {
    return (event: any) => {
      setActiveCategory(data);
      console.log(activeCategory);
      
    };
  };
  return (
    <>
      <Head>
        <title>next-pocket</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center ">
        <div className="flex  h-screen  w-full ">
          <FriendsBar />

          <div className=" relative h-full flex-1 items-stretch    overflow-hidden bg-gray-300   dark:bg-zinc-700  ">
            <div className="">
              <div className="px-2  sm:px-0">
                <Tab.Group>
                  <Tab.List className="flex space-x-1 ">
                    {categories.map((category) => (
                      <Tab
                        key={category}
                        className={({ selected }) =>
                          classNames(selected ? "active-tab-list" : "tab-list")
                        }
                        onClick={handleClick(category)}
                      >
                        {category}
                      </Tab>
                    ))}
                  </Tab.List>
                  <Tab.Panels className="mt-2">
                    <Tab.Panel className={classNames("rounded-xl  p-3", " ")}>
                      {/* Content for "Requests" category */}
                      {activeCategory === "Requests" && <FriendRequests />}
                    </Tab.Panel>
                    <Tab.Panel className={classNames(" rounded-xl p-3", "")}>
                      {/* Content for "AddFriend" category */}
                      {activeCategory === "AddFriend" && <AddFriend />}
                    </Tab.Panel>
                  </Tab.Panels>
                </Tab.Group>
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}

export default observer(DirectMessagesPage);
