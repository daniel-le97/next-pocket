/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable @typescript-eslint/no-floating-promises */
import { type NextPage } from "next";
import Head from "next/head";
import { useEffect } from "react";
import { useRouter } from "next/router";
import { AppState } from "AppState";
import { observer } from "mobx-react";
import Pop from "utils/Pop";
import FriendsBar from "@/components/DirectMessages/FriendsBar";
import { withAuth } from "../../middleware";
import { directMessageService, friendsService } from "../../services";
import DirectMessageScroll from "@/components/GlobalComponents/InfiniteMessageScroll";
import CreateMessage from "@/components/CreateMessage/CreateMessage";
import { UnsubscribeFunc } from "pocketbase";

const DirectMessages: NextPage = () => {
  const router = useRouter();
  const id = router.query.id as string;

  useEffect(() => {
    let unsubscribe: UnsubscribeFunc
    if (id) {
      (async () => {
        try {
          AppState.page = 1;
          AppState.dmRouterQuery = router.query.id as string;
          const nID = id as unknown as number;
          if (AppState.dmTracker[nID] == true) return;
          AppState.directMessages = AppState.directMessages.filter(
            (dm) => dm.id != id
          );
          AppState.dmTracker[nID] = true;

          await directMessageService.getDirectMessages(id);
          await friendsService.getUserFriendsList();
          unsubscribe = await directMessageService.subscribeToDM(id)
        } catch (error) {
          Pop.error(error);
        }
      })();
    }
    return () => {
      AppState.dmTracker[id as unknown as number] = false;
      unsubscribe ? unsubscribe() : null
    };
  }, [router.query.id]);

  return (
    <>
      <Head>
        <title>next-pocket</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center ">
        <div className="flex  h-screen   w-full ">
          <FriendsBar />
          <div className="message-container">
            {router.query.id && <DirectMessageScroll />}
            {/* <CreateDirectMessage /> */}
            <CreateMessage />
          </div>
        </div>
      </main>
    </>
  );
};

export default observer(withAuth(DirectMessages));
